'use strict';

const adsSign = require('../../src/scripts/ads-sign');

test('sign empty string', () => {
    // ads/external/ed25519$ ./key "user0.0"
    // SK: 9F7D754820842E3D141FA7BCF6A3BA731EFE77914AC67E00D1D223E7ADB6FA48
    // PK: 47B6D484EA5D40716720FE448018BCC08C53FEA96FB8749FE5BFFCB7CF57B112
    // SG: BB4946AEC4C1BE7E1BCB11B27B3CFB13B3234417FCDC96356CEB910C233423B5692B93196471C75D1BDB9E8FE2BCAD184E1A0B37976BDF228FF5A60D5173F80B
    const secretKey = '9F7D754820842E3D141FA7BCF6A3BA731EFE77914AC67E00D1D223E7ADB6FA4847B6D484EA5D40716720FE448018BCC08C53FEA96FB8749FE5BFFCB7CF57B112';
    const data = '';
    const expSignature = 'BB4946AEC4C1BE7E1BCB11B27B3CFB13B3234417FCDC96356CEB910C233423B5692B93196471C75D1BDB9E8FE2BCAD184E1A0B37976BDF228FF5A60D5173F80B';

    expect(adsSign.sign(data, secretKey)).toBe(expSignature);
});

test('sign transaction', () => {
    // secret key is concatenation of private and public key
    const secretKey = 'BB3425F914CA9F661CA6F3B908E07092B5AFB7F2FDAE2E94EDE12C83207CA743' + 'A9C0D972D8AAB73805EC4A28291E052E3B5FAFE0ADC9D724917054E5E2690363';
    const hashin = '71BD0607F5B874B2B4ECC442A76D0FD7544FE12CD32BDDB6BA7F3D5755C40A1A';
    const txData = '04010000000000010000000100000001000000000000E87648170000000000000000000000000000000000000000000000000000000000000000000000';
    const data = hashin + txData;
    const expSignature = 'F9C975D060D84EBCA286E7C9E4AA68F0B77D005B98067C17E00AA93A102D48BB49A20233A37CBF3BA8BB1A8A8B94FC4832BC286B59EE66AA0BA01E2D3AA8CF0A';

    expect(adsSign.sign(data, secretKey)).toBe(expSignature);
});

test('invalid key length', () => {
    const secretKey = '';
    const data = '';
    expect(() => {
        adsSign.sign(data, secretKey)
    }).toThrow();
});
